basePath: /jxc/v1
definitions:
  models.BatteryCategory:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      unit_price:
        description: Price per kg
        type: number
      updated_at:
        type: string
    type: object
  models.CreateInboundOrderItem:
    properties:
      category_id:
        type: integer
      gross_weight:
        type: number
      tare_weight:
        minimum: 0
        type: number
      unit_price:
        type: number
    required:
    - category_id
    - gross_weight
    - tare_weight
    - unit_price
    type: object
  models.CreateInboundOrderRequest:
    properties:
      items:
        items:
          $ref: '#/definitions/models.CreateInboundOrderItem'
        type: array
      notes:
        type: string
      supplier_name:
        type: string
    required:
    - items
    - supplier_name
    type: object
  models.InboundOrder:
    properties:
      created_at:
        description: 创建时间
        type: string
      created_by:
        description: 创建人
        type: integer
      id:
        description: 订单ID
        type: integer
      notes:
        description: 备注
        type: string
      order_no:
        description: 订单号
        type: string
      status:
        description: '''completed'', ''cancelled'''
        type: string
      supplier_name:
        description: 供应商名称
        type: string
      total_amount:
        description: 总金额
        type: number
      updated_at:
        description: 更新时间
        type: string
    type: object
  models.Inventory:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      current_weight_kg:
        type: number
      id:
        type: integer
      last_inbound_at:
        type: string
      last_outbound_at:
        type: string
      updated_at:
        type: string
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      real_name:
        type: string
      role:
        description: '''super_admin'' or ''normal'''
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8036
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 电池进销存管理系统的后端API接口文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 电池进销存管理系统 API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 用户使用用户名和密码进行登录认证
      parameters:
      - description: 登录请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录失败
          schema:
            $ref: '#/definitions/models.Response'
      summary: 用户登录
      tags:
      - 认证
  /categories:
    get:
      consumes:
      - application/json
      description: 获取系统中所有电池分类的列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 获取所有电池分类
      tags:
      - 电池分类管理
    post:
      consumes:
      - application/json
      description: 创建新的电池分类
      parameters:
      - description: 电池分类信息
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.BatteryCategory'
      produces:
      - application/json
      responses:
        "200":
          description: 创建失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 创建电池分类
      tags:
      - 电池分类管理
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除电池分类
      parameters:
      - description: 分类ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 删除电池分类
      tags:
      - 电池分类管理
    get:
      consumes:
      - application/json
      description: 根据分类ID获取电池分类信息
      parameters:
      - description: 分类ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 根据ID获取电池分类
      tags:
      - 电池分类管理
    put:
      consumes:
      - application/json
      description: 根据ID更新电池分类信息
      parameters:
      - description: 分类ID
        in: path
        name: id
        required: true
        type: integer
      - description: 电池分类信息
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.BatteryCategory'
      produces:
      - application/json
      responses:
        "200":
          description: 更新失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 更新电池分类
      tags:
      - 电池分类管理
  /inbound/orders:
    get:
      consumes:
      - application/json
      description: 分页获取入库订单列表
      parameters:
      - default: 20
        description: 每页数量
        in: query
        name: limit
        type: integer
      - default: 0
        description: 偏移量
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 获取所有入库订单
      tags:
      - 入库管理
    post:
      consumes:
      - application/json
      description: 创建新的入库订单
      parameters:
      - description: 入库订单信息
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.CreateInboundOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 创建入库订单
      tags:
      - 入库管理
  /inbound/orders/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除入库订单
      parameters:
      - description: 订单ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 删除入库订单
      tags:
      - 入库管理
    get:
      consumes:
      - application/json
      description: 根据订单ID获取入库订单详情
      parameters:
      - description: 订单ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 根据ID获取入库订单
      tags:
      - 入库管理
    put:
      consumes:
      - application/json
      description: 根据ID更新入库订单信息
      parameters:
      - description: 订单ID
        in: path
        name: id
        required: true
        type: integer
      - description: 入库订单信息
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.InboundOrder'
      produces:
      - application/json
      responses:
        "200":
          description: 更新失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 更新入库订单
      tags:
      - 入库管理
  /inventory:
    get:
      consumes:
      - application/json
      description: 获取所有电池分类的库存信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 获取所有库存
      tags:
      - 库存管理
  /inventory/{categoryId}:
    get:
      consumes:
      - application/json
      description: 根据电池分类ID获取该分类的库存信息
      parameters:
      - description: 分类ID
        in: path
        name: categoryId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 根据分类ID获取库存
      tags:
      - 库存管理
  /users:
    get:
      consumes:
      - application/json
      description: 获取系统中所有用户的列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 获取所有用户
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      description: 创建新用户
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: 创建失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 创建用户
      tags:
      - 用户管理
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 根据用户ID获取用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 根据ID获取用户
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 根据ID更新用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: 更新失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 更新用户
      tags:
      - 用户管理
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
